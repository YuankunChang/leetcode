// Unique Paths
// My way

public class Solution {
    public int uniquePaths(int m, int n) {
        int[][] path = new int[m + 1][n + 1];
        return findPath(path, 1,1,m, n);
    }
    public int findPath(int[][] path, int i, int j, int m, int n) {
        if ((i == m) && (j == n))
            return 1;
        else if (i == m )
            return path[i][j+1] == 0 ? findPath(path,i,j+1,m,n) : path[i][j+1];
        else if (j == n)
            return path[i+1][j] == 0 ? findPath(path,i+1,j,m,n) : path[i+1][j];
        else {
            int a = path[i+1][j] == 0 ? findPath(path,i+1,j,m,n) : path[i+1][j];
            int b = path[i][j+1] == 0 ? findPath(path,i,j+1,m,n) : path[i][j+1];
            return a + b;
        }
    }
}
 
